// 형변환(업캐스팅_as, 다운캐스팅_as?,as!)
// 상속관계가 있는 클래스끼리만 타입 캐스팅이 가능

// 업캐스팅
// 자식인스턴스 as 부모클래스, 안전한 캐스팅, 자식이 추상화됨

// 다운캐스팅
// 부모인스터스를 자식 클래스로 변환하는데 사용
// 부모인스턴스 as! 자식클래스 - 일반 타입을 반환, 다운캐스팅이 반드시 성공할 것이라는 확신이 있을 때
// 부모인스턴스 as? 자식클래스 - 옵셔넌 타입으로 반환, 다운캐스팅이 될거라는 확신이 없을때


// 타입검사(is)
class A {}
var a = A()
if a is A {
  print("yes")
}


// protocal(AnyObeject, Any)
// AnyObject
// 범용 타입, 상속관계가 아니라도 타입캐스팅이 가능한 타입
// 어떤 클래스의 객체도 저장 가능
// 가장 추상화된 최상위 개념
// 클래스만 허용하며 구조체나 열거형은 허용하지 않음

// Any
// Any can represent an instance of any type at all, including funcion types.
// 클래스, 구조체, 열거형, 함수타입도 가능


